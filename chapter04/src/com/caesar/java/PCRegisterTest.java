package com.caesar.java;

/**
 * @author 天才小熊猫
 * PC寄存器（程序计数器）
 *  JVM中的程序计数器的Register命名来源于CPU的寄存器，寄存器存储指令相关的现场信息，
 *  CPU只有吧数据装载到寄存器才能够运行。
 *  JVM中的PC寄存器是对物理PC寄存器的一种抽象模拟。
 *
 *  作用：
 *  PC寄存器用来存储指向下一条指令的地址，也即将执行的指令代码。由执行引擎读取下一条指令。
 *
 *  它是一块很小的内存空间，几乎可以忽略不计。也是运行速度最快的存储区域。
 *
 *  JVM规范中，每个线程都有它自己的程序计数器，是线程私有的，生命周期与线程的声明周期保持一致。
 *
 *  任何时间一个线程都只有一个方法在执行，也就是所谓的当前方法。程序计数器会存储当前线程正在执行的java方法的JVM指令地址；
 *  或者，如果实在执行native方法，则是未指定值（undefined）
 *
 *  它是程序控制流的指示器，分支，循环，跳转，异常处理，线程恢复等基础功能都需要依赖这个计数器来完成。
 *
 *  字节码解释器工作时就是通过改变这个计数器的值来选取下一条需要执行的字节码指令（解释为什么要记录当前线程的执行地址？）
 *
 *  它是唯一一个再java虚拟机规范中没有规定任何OutOtMeoryError情况的区域。
 *
 *   为什么PC寄存器要被设定为线程私有的？
 *   多线程在一个特定的时间段内只会执行某一个线程的方法，CPU会不定的做任务的切换，这样必然导致经常的中断和恢复，
 *   为了能够准确的记录各个线程正在执行的当前字节码指令地址，最好的办法自然就是为每一个线程都分配一个PC寄存器，这样保证多个线程之间的运行互不干扰。
 *
 */
public class PCRegisterTest {
    public static void main(String[] args) {
        int a = 10;
        int b = 20;
        int c = a + b;

        String s = "abc";
        System.out.println(a);
        System.out.println(c);
    }
}
